@model ProductIndexViewModel
@{
	ViewData["Title"] = "Product Listings";
}

<h2>Product Listing</h2>

<a asp-action="Create" asp-controller="Product" class="btn btn-secondary mb-3">Create Product</a>

@if (TempData["Message"] != null)
{
	<div class="alert alert-success alert-dismissible fade show" role="alert">
		@TempData["Message"]
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}

<!-- Search and Filter Form -->
<form method="get" asp-action="Index" class="row g-3 mb-4">
	<div class="col-md-6">
		<label for="searchTerm" class="form-label">Title</label>
		<input type="text" class="form-control" id="searchTerm" name="searchTerm" value="@Model.SearchTerm" placeholder="Search by title..." />
	</div>
	<div class="col-md-3">
		<label for="minPrice" class="form-label">Min Price</label>
		<input type="number" step="0.01" class="form-control" id="minPrice" name="minPrice" value="@(Model.MinPrice?.ToString())" />
	</div>
	<div class="col-md-3">
		<label for="maxPrice" class="form-label">Max Price</label>
		<input type="number" step="0.01" class="form-control" id="maxPrice" name="maxPrice" value="@(Model.MaxPrice?.ToString())" />
	</div>
	<div class="col-12">
		<button type="submit" class="btn btn-primary">Search</button>
		<a asp-action="Index" class="btn btn-outline-secondary">Clear</a>
	</div>
</form>

@if (Model.Products.Count == 0)
{
	<p>No products matched your search.</p>
}
else
{
	<!-- Product count and pagination info -->
	<div class="d-flex justify-content-between align-items-center mb-3">
		<p class="mb-0">
			Showing @Model.Products.Count of @Model.TotalProducts products 
			(Page @Model.CurrentPage of @Model.TotalPages)
		</p>
	</div>

	<table class="table table-striped">
		<thead>
			<tr>
				<th>@Html.DisplayNameFor(m => m.Products.First().Title)</th>
				<th>@Html.DisplayNameFor(m => m.Products.First().Price)</th>
				<th>Links</th>
			</tr>
		</thead>
		<tbody>
			@foreach (Product product in Model.Products)
			{
				<tr>
					<td>@Html.DisplayFor(p => product.Title)</td>
					<td>@Html.DisplayFor(p => product.Price)</td>
					<td>
						<a class="btn btn-primary" asp-controller="Product" asp-action="Edit" asp-route-id="@product.ProductId">Update</a>
						--
						<a class="btn btn-danger" asp-controller="Product" asp-action="Delete" asp-route-id="@product.ProductId">Delete</a>
					</td>
				</tr>
			}
		</tbody>
	</table>

	<!-- Pagination Controls -->
	@if (Model.TotalPages > 1)
	{
		<nav aria-label="Product pagination">
			<ul class="pagination justify-content-center">
				<!-- Previous Page Button -->
				<li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
					<a class="page-link" 
					   asp-action="Index" 
					   asp-route-page="@(Model.CurrentPage - 1)"
					   asp-route-searchTerm="@Model.SearchTerm"
					   asp-route-minPrice="@Model.MinPrice"
					   asp-route-maxPrice="@Model.MaxPrice"
					   tabindex="@(Model.HasPreviousPage ? 0 : -1)">
						Previous
					</a>
				</li>

				<!-- Page Numbers -->
				@{
					int startPage = Math.Max(1, Model.CurrentPage - 2);
					int endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
				}

				@if (startPage > 1)
				{
					<li class="page-item">
						<a class="page-link" asp-action="Index" asp-route-page="1" asp-route-searchTerm="@Model.SearchTerm" asp-route-minPrice="@Model.MinPrice" asp-route-maxPrice="@Model.MaxPrice">1</a>
					</li>
					@if (startPage > 2)
					{
						<li class="page-item disabled">
							<span class="page-link">...</span>
						</li>
					}
				}

				@for (int i = startPage; i <= endPage; i++)
				{
					<li class="page-item @(i == Model.CurrentPage ? "active" : "")">
						<a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-searchTerm="@Model.SearchTerm" asp-route-minPrice="@Model.MinPrice" asp-route-maxPrice="@Model.MaxPrice">
							@i
							@if (i == Model.CurrentPage)
							{
								<span class="sr-only">(current)</span>
							}
						</a>
					</li>
				}

				@if (endPage < Model.TotalPages)
				{
					@if (endPage < Model.TotalPages - 1)
					{
						<li class="page-item disabled">
							<span class="page-link">...</span>
						</li>
					}
					<li class="page-item">
						<a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages" asp-route-searchTerm="@Model.SearchTerm" asp-route-minPrice="@Model.MinPrice" asp-route-maxPrice="@Model.MaxPrice">@Model.TotalPages</a>
					</li>
				}

				<!-- Next Page Button -->
				<li class="page-item @(Model.HasNextPage ? "" : "disabled")">
					<a class="page-link" 
					   asp-action="Index" 
					   asp-route-page="@(Model.CurrentPage + 1)"
					   asp-route-searchTerm="@Model.SearchTerm"
					   asp-route-minPrice="@Model.MinPrice"
					   asp-route-maxPrice="@Model.MaxPrice"
					   tabindex="@(Model.HasNextPage ? 0 : -1)">
						Next
					</a>
				</li>
			</ul>
		</nav>
	}
}

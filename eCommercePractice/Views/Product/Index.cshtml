@model ProductIndexViewModel
@{
	ViewData["Title"] = "Product Listings";
}

<h2>Product Listing</h2>

<a asp-action="Create" asp-controller="Product" class="btn btn-secondary mb-3">Create Product</a>

@if (TempData["Message"] != null)
{
	<div class="alert alert-success alert-dismissible fade show" role="alert">
		@TempData["Message"]
		<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
	</div>
}

<!-- Search and Filter Form Card -->
<div class="card shadow-sm mb-4">
	<div class="card-header">
		<h5 class="card-title mb-0">
			<i class="bi bi-search"></i> Search & Filter Products
		</h5>
	</div>
	<div class="card-body">
		<form method="get" asp-action="Index" class="row g-3">
			<div class="col-md-6">
				<label for="searchTerm" class="form-label">Title</label>
				<input type="text" class="form-control" id="searchTerm" name="searchTerm" value="@Model.SearchTerm" placeholder="Search by title..." />
			</div>
			<div class="col-md-3">
				<label for="minPrice" class="form-label">Min Price</label>
				<input type="number" step="0.01" class="form-control" id="minPrice" name="minPrice" value="@(Model.MinPrice?.ToString())" placeholder="0.00" />
			</div>
			<div class="col-md-3">
				<label for="maxPrice" class="form-label">Max Price</label>
				<input type="number" step="0.01" class="form-control" id="maxPrice" name="maxPrice" value="@(Model.MaxPrice?.ToString())" placeholder="1000.00" />
			</div>
			<div class="col-12">
				<button type="submit" class="btn btn-primary">
					<i class="bi bi-search"></i> Search
				</button>
				<a asp-action="Index" class="btn btn-outline-secondary">
					<i class="bi bi-arrow-clockwise"></i> Clear
				</a>
			</div>
		</form>
	</div>
</div>

@if (Model.Products.Count == 0)
{
	<div class="card shadow-sm">
		<div class="card-body text-center">
			<div class="py-4">
				<i class="bi bi-inbox display-1 text-muted"></i>
				<h4 class="mt-3">No Products Found</h4>
				<p class="text-muted">No products matched your search criteria. Try adjusting your filters or search terms.</p>
				<a asp-action="Index" class="btn btn-outline-primary">View All Products</a>
			</div>
		</div>
	</div>
}
else
{
	<!-- Product Listing Card -->
	<div class="card shadow-sm">
		<div class="card-header d-flex justify-content-between align-items-center">
			<h5 class="card-title mb-0">
				<i class="bi bi-list-ul"></i> Products
			</h5>
			<small class="text-muted">
				Showing @Model.Products.Count of @Model.TotalProducts products 
				(Page @Model.CurrentPage of @Model.TotalPages)
			</small>
		</div>
		<div class="card-body p-0">
			<div class="table-responsive">
				<table class="table table-striped table-hover mb-0">
					<thead class="table-dark">
						<tr>
							<th class="px-4 py-3">@Html.DisplayNameFor(m => m.Products.First().Title)</th>
							<th class="px-4 py-3">@Html.DisplayNameFor(m => m.Products.First().Price)</th>
							<th class="px-4 py-3 text-center">Actions</th>
						</tr>
					</thead>
					<tbody>
						@foreach (Product product in Model.Products)
						{
							<tr>
								<td class="px-4 py-3">
									<strong>@Html.DisplayFor(p => product.Title)</strong>
								</td>
								<td class="px-4 py-3">
									<span class="badge bg-success">@Html.DisplayFor(p => product.Price)</span>
								</td>
								<td class="px-4 py-3 text-center">
									<div class="btn-group" role="group">
										<a class="btn btn-sm btn-outline-primary" asp-controller="Product" asp-action="Edit" asp-route-id="@product.ProductId" title="Edit Product">
											<i class="bi bi-pencil"></i> Edit
										</a>
										<a class="btn btn-sm btn-outline-danger" asp-controller="Product" asp-action="Delete" asp-route-id="@product.ProductId" title="Delete Product">
											<i class="bi bi-trash"></i> Delete
										</a>
									</div>
								</td>
							</tr>
						}
					</tbody>
				</table>
			</div>
		</div>
		
		<!-- Pagination in Card Footer -->
		@if (Model.TotalPages > 1)
		{
			<div class="card-footer">
				<nav aria-label="Product pagination">
					<ul class="pagination justify-content-center mb-0">
						<!-- Previous Page Button -->
						<li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
							<a class="page-link" 
							   asp-action="Index" 
							   asp-route-page="@(Model.CurrentPage - 1)"
							   asp-route-searchTerm="@Model.SearchTerm"
							   asp-route-minPrice="@Model.MinPrice"
							   asp-route-maxPrice="@Model.MaxPrice"
							   tabindex="@(Model.HasPreviousPage ? 0 : -1)">
								<i class="bi bi-chevron-left"></i> Previous
							</a>
						</li>

						<!-- Page Numbers -->
						@{
							int startPage = Math.Max(1, Model.CurrentPage - 2);
							int endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
						}

						@if (startPage > 1)
						{
							<li class="page-item">
								<a class="page-link" asp-action="Index" asp-route-page="1" asp-route-searchTerm="@Model.SearchTerm" asp-route-minPrice="@Model.MinPrice" asp-route-maxPrice="@Model.MaxPrice">1</a>
							</li>
							@if (startPage > 2)
							{
								<li class="page-item disabled">
									<span class="page-link">...</span>
								</li>
							}
						}

						@for (int i = startPage; i <= endPage; i++)
						{
							<li class="page-item @(i == Model.CurrentPage ? "active" : "")">
								<a class="page-link" asp-action="Index" asp-route-page="@i" asp-route-searchTerm="@Model.SearchTerm" asp-route-minPrice="@Model.MinPrice" asp-route-maxPrice="@Model.MaxPrice">
									@i
									@if (i == Model.CurrentPage)
									{
										<span class="sr-only">(current)</span>
									}
								</a>
							</li>
						}

						@if (endPage < Model.TotalPages)
						{
							@if (endPage < Model.TotalPages - 1)
							{
								<li class="page-item disabled">
									<span class="page-link">...</span>
								</li>
							}
							<li class="page-item">
								<a class="page-link" asp-action="Index" asp-route-page="@Model.TotalPages" asp-route-searchTerm="@Model.SearchTerm" asp-route-minPrice="@Model.MinPrice" asp-route-maxPrice="@Model.MaxPrice">@Model.TotalPages</a>
							</li>
						}

						<!-- Next Page Button -->
						<li class="page-item @(Model.HasNextPage ? "" : "disabled")">
							<a class="page-link" 
							   asp-action="Index" 
							   asp-route-page="@(Model.CurrentPage + 1)"
							   asp-route-searchTerm="@Model.SearchTerm"
							   asp-route-minPrice="@Model.MinPrice"
							   asp-route-maxPrice="@Model.MaxPrice"
							   tabindex="@(Model.HasNextPage ? 0 : -1)">
								Next <i class="bi bi-chevron-right"></i>
							</a>
						</li>
					</ul>
				</nav>
			</div>
		}
	</div>
}
